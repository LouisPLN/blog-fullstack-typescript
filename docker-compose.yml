services:
  frontend:
    build:
      context: ./frontend
      dockerfile: Dockerfile
    ports:
      - "3000:3000"
    volumes:
      - .:/frontend
      - /app/node_modules  
    command: npm run dev  
    develop:
      watch:
      - action: sync
        path: ./web
        target: /src/web
        ignore:
          - node_modules/
      - action: rebuild
        path: package.json
    environment:
      - NEXT_PUBLIC_API_URL=http://backend:3333
      - WATCHPACK_POLLING=true
    depends_on:
      - backend

  backend:
    build:
      context: ./backend
      dockerfile: Dockerfile
    ports:
      - "3333:3333"
    volumes:
      - ./backend:/src 
      - /app/node_modules 
    environment:
      DATABASE_URL: postgres://admin:admin@db:5432/blog 
    command: npm run start:dev 
    depends_on:
      - db 

  db:
    image: postgres:15-alpine
    restart: always
    environment:
      POSTGRES_USER: admin
      POSTGRES_PASSWORD: admin
      POSTGRES_DB: blog
    ports:
      - "5432:5432"
    volumes:
      - pg-data:/var/lib/postgresql/data

  pgadmin:
    image: dpage/pgadmin4
    ports:
      - "8080:80"
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@admin.com
      PGADMIN_DEFAULT_PASSWORD: admin

volumes:
  pg-data:
